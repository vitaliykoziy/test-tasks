{
  "name": "jshint-loader",
  "version": "0.8.3",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "jshint loader module for webpack",
  "dependencies": {
    "loader-utils": "0.2.x",
    "rcloader": "=0.1.2",
    "strip-json-comments": "0.1.x"
  },
  "peerDependencies": {
    "jshint": "^2.5.0"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:webpack/jshint-loader.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "readme": "# jshint loader for webpack\r\n\r\n## Usage\r\n\r\nApply the jshint loader as pre/postLoader in your webpack configuration:\r\n\r\n``` javascript\r\nmodule.exports = {\r\n\tmodule: {\r\n\t\tpreLoaders: [\r\n\t\t\t{\r\n\t\t\t\ttest: /\\.js$/, // include .js files\r\n\t\t\t\texclude: /node_modules/, // exclude any and all files in the node_modules folder\r\n\t\t\t\tloader: \"jshint-loader\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\t// more options in the optional jshint object\r\n\tjshint: {\r\n\t\t// any jshint option http://www.jshint.com/docs/options/\r\n\t\t// i. e.\r\n\t\tcamelcase: true,\r\n\r\n\t\t// jshint errors are displayed by default as warnings\r\n\t\t// set emitErrors to true to display them as errors\r\n\t\temitErrors: false,\r\n\r\n\t\t// jshint to not interrupt the compilation\r\n\t\t// if you want any file with jshint errors to fail\r\n\t\t// set failOnHint to true\r\n\t\tfailOnHint: false,\r\n\r\n\t\t// custom reporter function\r\n\t\treporter: function(errors) { }\r\n\t}\r\n}\r\n```\r\n\r\n### Custom reporter\r\n\r\nBy default, `jshint-loader` will provide a default reporter.\r\n\r\nHowever, if you prefer a custom reporter, pass a function under the `reporter` key in `jshint` options. (see *usage* above)\r\n\r\nThe reporter function will be passed an array of errors/warnings produced by jshint\r\nwith the following structure:\r\n```js\r\n[\r\n{\r\n    id:        [string, usually '(error)'],\r\n    code:      [string, error/warning code],\r\n    reason:    [string, error/warning message],\r\n    evidence:  [string, a piece of code that generated this error]\r\n    line:      [number]\r\n    character: [number]\r\n    scope:     [string, message scope;\r\n                usually '(main)' unless the code was eval'ed]\r\n\r\n    [+ a few other legacy fields that you don't need to worry about.]\r\n},\r\n// ...\r\n// more errors/warnings\r\n]\r\n```\r\n\r\nThe reporter function will be excuted with the loader context as `this`. You may emit messages using `this.emitWarning(...)` or `this.emitError(...)`. See [webpack docs on loader context](http://webpack.github.io/docs/loaders.html#loader-context).\r\n\r\n**Note:** jshint reporters are **not compatible** with jshint-loader!\r\nThis is due to the fact that reporter input is only processed from one file; not multiple files. Error reporting in this manner differs from [tranditional reporters](http://www.jshint.com/docs/reporters/) for jshint\r\nsince the loader plugin (i.e. jshint-loader) is executed for each source file; and thus the reporter is executed for each file.\r\n\r\nThe output in webpack CLI will usually be:\r\n```js\r\n...\r\n\r\nWARNING in ./path/to/file.js\r\n<reporter output>\r\n\r\n...\r\n```\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/webpack/jshint-loader/issues"
  },
  "_id": "jshint-loader@0.8.3",
  "_from": "jshint-loader@"
}
